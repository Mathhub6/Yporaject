# .github/workflows/release.yml
name: Yporaject CI
on: 
  release:
    types: [created]
  schedule:
    - cron: '0 6 * * 6'  # Every Saturday at 6:00 AM
  workflow_dispatch:  # Allows manual triggering

jobs:
  release_node_inject:
    name: release node_inject ${{ matrix.target }}
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: Mathhub6/Yporaject

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Set up Node.js 20
        uses: actions/setup-node@v2
        with:
          node-version: 20
          
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: Mathhub6/Yporaject

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build binary
        shell: bash
        run: |
          cp -f ./src/hook.js ./src/hooklog.js  # Copy hook.js to src directory
          cargo build --verbose -r --target ${{ matrix.target }}

      - name: Generate and compile license-gen
        run: |
          cd js/license-gen/
          cargo build --verbose -r --target ${{ matrix.target }}
          cd ../..

      - name: Build archive
        run: |
          mkdir archive
          cp LICENSE README.md archive/
          if [ "${{ matrix.build }}" = "windows" ]; then
            cp "./target/${{ matrix.target }}/release/node_inject.exe" ./archive
            cp "./js/license-gen/target/${{ matrix.target }}/release/license-gen.exe" ./archive/
            cd archive
            7z a "${{ matrix.archive-name }}" LICENSE README.md node_inject.exe license-gen.exe
          else
            cp "./target/${{ matrix.target }}/release/node_inject" ./archive/
            cp "./js/license-gen/target/${{ matrix.target }}/release/license-gen" ./archive/
            tar -czf "${{ matrix.archive-name }}" LICENSE README.md node_inject license-gen
          fi

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive-name }}
          path: archive/${{ matrix.archive-name }}
