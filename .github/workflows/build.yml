# .github/workflows/release.yml
name: Yporaject CI
on: 
  release:
    types: [created]
  schedule:
    - cron: '0 6 * * 6'  # 每周六6点
  workflow_dispatch:  # Allows manual triggering

jobs:
  release_node_inject:
    name: release node_inject ${{ matrix.target }}
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz
    steps:
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
          ARCHIVE_NAME: node_inject_${{ matrix.target }}
          
  release_license-gen:
    name: release license-gen ${{ matrix.target }}
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz
    steps:
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
          SRC_DIR: "license-gen"
          ARCHIVE_NAME: license-gen_${{ matrix.target }}
